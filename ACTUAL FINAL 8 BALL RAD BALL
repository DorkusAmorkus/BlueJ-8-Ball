/* Elias Han
 * Mike Beradino
 * IB Comp Sci
 * 27 April 2019
 * 
 * This is a magic 8 ball project
 * 
 * Download the txt file "Die" and put it in a folder called "test" 
 * in this same directory
 * 
 * Type a question, press the button, get your answer.
 * 
 * an LED will flash once the GUI button is pressed; system will close when external button is pressed.
   */
import com.pi4j.io.gpio.GpioController; //used for LED on/off methods and ByeBye method
import com.pi4j.io.gpio.GpioFactory;
import com.pi4j.io.gpio.GpioPinDigitalInput;
import com.pi4j.io.gpio.GpioPinDigitalOutput;
import com.pi4j.io.gpio.PinPullResistance;
import com.pi4j.io.gpio.RaspiPin;
import com.pi4j.io.gpio.event.GpioPinDigitalStateChangeEvent;
import com.pi4j.io.gpio.event.GpioPinListenerDigital;

import java.awt.BorderLayout; //used to build GUI
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Container;
import javax.swing.JFrame;
import javax.swing.JTextArea;
import javax.swing.JButton;
import javax.swing.JFrame;

import java.io.File; //used for the txtRand method
import java.io.FileNotFoundException;
import java.util.Scanner;
import java.util.ArrayList;
import java.util.Random;

public class RandBall {
    static int txt;
    static JFrame f = new JFrame("Type question and press button");
    static final GpioController gpio = GpioFactory.getInstance();
    static final GpioPinDigitalOutput led2 = gpio.provisionDigitalOutputPin(RaspiPin.GPIO_02);
    
    public static void main (String[] args) throws FileNotFoundException{ //credit to George Larach for GUI code
 
        f.setSize(500, 500);
        f.setLocation(300,200);
      
       JTextArea Input = new JTextArea(10, 40); //top 1/3rd of GUI w/ text input
        f.getContentPane().add(BorderLayout.NORTH, Input);
        Input.setBackground(Color.BLACK);
        Input.setForeground(Color.WHITE);

    
       JButton button = new JButton("8"); // button on GUI (middle 1/3rd)
        f.getContentPane().add(BorderLayout.CENTER, button);
        button.setBackground(Color.BLACK);
        button.setOpaque(true);
        button.setBorderPainted(false);
        button.setForeground(Color.WHITE);
       
       JTextArea Output = new JTextArea(10, 40); //text output from txt file
        f.getContentPane().add(BorderLayout.SOUTH, Output);
        Output.setEditable(false);
        Output.setForeground(Color.WHITE);
        Output.setBackground(Color.BLACK);
       

       try {
            ledOff(); //turns LED off
            ByeBye(); //runs a method that waits for external button to be pressed
          } 
           catch (java.io.IOException ie){
           System.exit(1);
          }

      
        button.addActionListener(new ActionListener () //attatches an action listener to the GUI button
       {
          public void actionPerformed(ActionEvent touchButt) 
          {
            txt = 0; //used to get lines from the txt file
            
             
           try {
             txtRand(); //runs the method 
             ledOn(); //turns LED on
            } 
             catch (java.io.IOException ie){
            System.exit(1);
            }

         }  
        });
          f.setVisible(true);
    }   
  
    public static void ledOff() throws java.io.IOException  {  
        led2.low();
    }
                      
    public static void ledOn() throws java.io.IOException  {  
        led2.high();
    }
                
     public static void txtRand() throws java.io.IOException  
     {
        JTextArea Output = new JTextArea(10, 40);
        f.getContentPane().add(BorderLayout.SOUTH, Output);
        Output.setEditable(false);
        Output.setForeground(Color.WHITE);
        Output.setBackground(Color.BLACK);
      
        if (txt == 1) {
          Random random = new Random(); // initializes a random
          
          File text = new File("test/Die.txt");
          
          ArrayList<String> txtfromFile =new ArrayList(); // create a array of strings

          
           Scanner scnr = new Scanner(text); //Creating Scanner instnace to read File in Java
           
           int lineNumber = 1; //Reading each line of file using Scanner class
           
           while(scnr.hasNextLine()){ //reads each line of file
            String line = scnr.nextLine();
            txtfromFile.add(line);
         }
        
           int randomInteger = random.nextInt(13); //makes a list of 14 integers to randomly call upon
           Output.setText(txtfromFile.get(randomInteger)); //puts random text file line in Output text box
        
         }  else {
           System.out.println("else state of off");
        };
    }
    
    public static void ByeBye() throws java.io.IOException  //sets up external button on GPIO Pin 7. Credit to Robert Savage
        { 
            final GpioController gpio2 = GpioFactory.getInstance();
            
        // provision gpio pin #01 & #03 as an output pins and blink

        // provision gpio pin #02 as an input pin with its internal pull down resistor enabled
        final GpioPinDigitalInput outerButt = gpio2.provisionDigitalInputPin(RaspiPin.GPIO_07, PinPullResistance.PULL_DOWN);
        outerButt.addListener(new GpioPinListenerDigital() 
        {
          @Override
          public void handleGpioPinDigitalStateChangeEvent(GpioPinDigitalStateChangeEvent event) 
               {
                   if(event.getState().isHigh()){
                      System.out.println(" pressed");
                      System.out.println("shutting down");
                        try { 
                            ledOff(); //turns off LED
                        }
                        catch (java.io.IOException ie){
                        }
                            System.exit(1); //exits system
                }
            }
        });
    }
}


  
